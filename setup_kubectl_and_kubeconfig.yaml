---
- name: Install kubectl locally
  hosts: local
  become: yes
  vars:
    kubectl_url: "https://s3.us-west-2.amazonaws.com/amazon-eks/1.30.0/2024-05-12/bin/linux/amd64/kubectl"
    kubectl_dest: "/usr/local/bin/kubectl"
    kubectl_bin_dest: "/home/ansible-user/bin/kubectl"
    kube_config_dir: "/home/ansible-user/.kube"
    kube_config_file: "{{ kube_config_dir }}/config"
    home_bin_dir: "/home/ansible-user/bin"

  tasks:
    - name: Download kubectl
      get_url:
        url: "{{ kubectl_url }}"
        dest: "{{ kubectl_dest }}"
        mode: "0755"

    - name: Ensure kubectl is executable
      file:
        path: "{{ kubectl_dest }}"
        mode: "0755"
        state: file

    - name: Ensure /home/ansible-user/bin directory exists
      file:
        path: "{{ home_bin_dir }}"
        state: directory
        mode: "0755"

    - name: Copy kubectl to /home/ansible-user/bin
      copy:
        src: "{{ kubectl_dest }}"
        dest: "{{ kubectl_bin_dest }}"
        mode: "0755"

    - name: Ensure kubectl is in PATH
      lineinfile:
        path: "/home/ansible-user/.bashrc"
        line: "export PATH=/home/ansible-user/bin:$PATH"
        create: yes

    - name: Create .kube directory
      file:
        path: "{{ kube_config_dir }}"
        state: directory
        owner: ansible-user
        group: ansible-user
        mode: "0755"

- name: Ensure admin.conf is present locally
  hosts: local
  become: no
  gather_facts: no
  tasks:
    - name: Check if admin.conf already exists locally
      stat:
        path: /etc/kubernetes/admin.conf
      register: admin_conf_stat

- name: Fetch admin.conf from remote node if not already fetched
  delegate_to: master1
  become: yes
  fetch:
    remote_src: yes
    src: /etc/kubernetes/admin.conf
    dest: /tmp/admin.conf
    flat: yes
  when: not admin_conf_stat.stat.exists

- name: Fetch Kubernetes config from remote node
  delegate_to: master1
  fetch:
    src: /tmp/admin.conf
    dest: /home/ansible-user/.kube/config
    flat: yes

- name: Clean up temporary admin.conf on remote node
  delegate_to: master1
  become: yes
  ansible.builtin.file:
    path: /tmp/admin.conf
    state: absent
  when: admin_conf_stat.stat.exists

- name: Set ownership and permissions of fetched config file on Ansible control node
  delegate_to: master1
  file:
    path: /home/ansible-user/.kube/config
    owner: ansible-user
    group: ansible-user
    mode: "0644"
    state: file
