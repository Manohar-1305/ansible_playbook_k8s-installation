<<<<<<< HEAD
- name: Set Hostname
  hostname:
    name: "{{ ansible_hostname }}"

- name: Update apt package
  apt:
    update_cache: yes
    force_apt_get: yes

- name: Disable swap
  shell: "sudo swapoff -a && sudo sed -i '/swap/d' /etc/fstab"

- name: Install dependencies package
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - "apt-transport-https"
    - "ca-certificates"
    - "curl"
    - "gpg"

- name: Add kubernetes Apt key
  ansible.builtin.shell: |
    curl -fsSL {{kubernetes_repo_url}}Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  register: kubernetes_key_status
  changed_when: kubernetes_key_status.rc == 0

- name: Add kubernetes apt repo
  ansible.builtin.shell: |
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] {{ kubernetes_repo_url }} /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
  args:
    creates: /etc/apt/sources.list.d/kubernetes.list
  register: kubernetes_repo_status
  changed_when: kubernetes_repo_status.rc == 0

- name: Update apt package
  apt:
    update_cache: yes

- name: Install specific versions of kubeadm, kubectl, kubelet
  apt:
    name: "{{kubernetes_package }}"
    state: present

- name: Mark on hold
  ansible.builtin.shell: |
    sudo apt-mark hold kubelet kubeadm kubectl

- name: Check if kubelet is running
  systemd:
    name: kubelet
    state: started
  register: kubelet_status

- name: Show kublet service
  debug:
    msg: "kubelet service is {{kubelet_status.state }}"

- name: Enable and restart
  service:
    name: kubelet
    state: started
  notify:
    - Enable and start kubelet

- name: Check kubelet status
  systemd:
    name: kubelet
    state: started
  register: kubelet_running

- name: Show kublet service
  debug:
    msg: "kubelet service is {{kubelet_running.state }}"
=======
- name: Set Hostname
  hostname:
    name: "{{ ansible_hostname }}"

- name: Update apt package
  apt:
    update_cache: yes
    force_apt_get: yes

- name: Disable swap
  shell: "sudo swapoff -a && sudo sed -i 'swap/d' /etc/fstab"

- name: Install dependencies package
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - "apt-transport-https"
    - "ca-certificates"
    - "curl"
    - "gpg"

- name: Add kubernetes Apt key
  ansible.builtin.shell: |
    curl -fsSL {{kubernetes_repo_url}}Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  register: kubernetes_key_status
  changed_when: kubernetes_key_status.rc == 0

- name: Add kubernetes apt repo
  ansible.builtin.shell: |
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] {{ kubernetes_repo_url }} /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
  args:
    creates: /etc/apt/sources.list.d/kubernetes.list
  register: kubernetes_repo_status
  changed_when: kubernetes_repo_status.rc == 0

- name: Update apt package
  apt:
    update_cache: yes

- name: Install specific versions of kubeadm, kubectl, kubelet
  apt:
    name: "{{kubernetes_package }}"
    state: present

- name: Mark on hold
  ansible.builtin.shell: |
    sudo apt-mark hold kubelet kubeadm kubectl

- name: Check if kubelet is running
  systemd:
    name: kubelet
    state: started
  register: kubelet_status

- name: Show kublet service
  debug:
    msg: "kubelet service is {{kubelet_status.state }}"

- name: Enable and restart
  service:
    name: kubelet
    state: started
  notify:
    - Enable and start kubelet

- name: Check kubelet status
  systemd:
    name: kubelet
    state: started
  register: kubelet_running

- name: Show kublet service
  debug:
    msg: "kubelet service is {{kubelet_running.state }}"
>>>>>>> 8268c6b (added files)
